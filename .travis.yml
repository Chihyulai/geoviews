language: generic
sudo: false
os:
  - linux

cache:
  timeout: 300
  directories:
    - $HOME/miniconda

before_cache:
  - rm -rf $HOME/miniconda/pkgs
  - rm -rf $HOME/miniconda/conda-bld
  - rm -rf $HOME/miniconda/envs/*/conda-bld

env:
  global:
    - PYENV_VERSION=3.6
    - PKG_TEST_PYTHON="--test-python=py36 --test-python=py27"
    - CHANS_DEV="-c pyviz/label/dev -c ioam"
    - CHANS_REL="-c pyviz -c ioam"
    - LABELS_DEV="--label dev"
    - LABELS_REL="--label dev --label main"

# quick hack to determine what tag means (improvements welcome)
#     release: ^v(\d+|\.)*[^a-z]\d*$
# dev release: ^v(\d+|\.)*[a-z]\d*$

stages:
  - test
  - name: conda_core_dev_package
    if: tag =~ ^v(\d+|\.)*[a-z]\d*$
  - name: conda_recommended_dev_package
    if: tag =~ ^v(\d+|\.)*[a-z]\d*$	
  - name: pip_dev_package
    if: tag =~ ^v(\d+|\.)*[a-z]\d*$
  - name: conda_package
    if: tag =~ ^v(\d+|\.)*[^a-z]\d*$
  - name: pip_package
    if: tag =~ ^v(\d+|\.)*[^a-z]\d*$    
  - name: docs
    if: tag =~ ^v(\d+|\.).*$

jobs:
  include:
    ########## DEVELOPER INSTALL ##########

    - &default
      stage: test
      env: DESC="dev test_all_recommended"
      before_install:
        - pip install pyctdev && doit miniconda_install && pip uninstall -y doit pyctdev
        - export PATH="$HOME/miniconda/bin:$PATH" && hash -r
        - conda config --set always_yes True
        - conda install -c pyviz pyctdev && doit ecosystem_setup
      install:
        - doit env_create $CHANS_DEV --python=$PYENV_VERSION
        - source activate test-environment
        - doit develop_install $CHANS_DEV -o recommended
        - doit env_capture
      before-script:
        - "echo 'backend : Agg' > $HOME/.matplotlib/matplotlibrc"
      script:
        - geoviews fetch-data --path=examples
        - bokeh sampledata
        - doit test_all_recommended
      after_success: coveralls

    # python 2 flake checking typically catches python 2 syntax
    # errors where python 3's been assumed...
    - <<: *default
      env: DESC="py2 flakes" PYENV_VERSION=2.7
      script: doit test_flakes

    ########## DOCS ##########

    - <<: *default
      stage: docs
      # not possible to run all examples to build website using only defaults (see setup.py)
      env: DESC="docs" CHANS_DEV="-c pyviz/label/dev -c ioam -c conda-forge"
      script:
        - doit develop_install $CHANS_DEV -o doc
        # Temporary hack
        - conda uninstall nbsite --force
        - pip install git+https://github.com/pyviz/nbsite.git
        - geoviews fetch-data --path=examples
        - bokeh sampledata
        # note: will vastly simplified in a future version of nbsite
        - cd doc
        - nbsite_nbpagebuild.py ioam geoviews ../examples .
        ### gallery
        - ln -s ../examples/assets assets
        - ln -s ../examples/data data
        - nbsite_gallery.py .. examples None '.' bokeh matplotlib None
        ###
        - sphinx-build -b html . ./_build/html
        - nbsite_fix_links.py _build/html
        - nbsite_cleandisthtml.py ./_build/html take_a_chance
        - touch ./_build/html/.nojekyll
        - cd ..
      deploy:
        - provider: pages
          skip_cleanup: true
          github_token: $GITHUB_TOKEN
          local_dir: ./doc/_build/html
          repo: ioam-docs/geoviews-dev
          on:
            tags: true
            all_branches: true
            condition: $TRAVIS_TAG =~ [0-9]+[a-z][0-9]*$
        - provider: pages
          skip_cleanup: true
          github_token: $GITHUB_TOKEN
          local_dir: ./doc/_build/html
          repo: ioam-docs/geoviews-release
          on:
            tags: true
            all_branches: true
            condition: $TRAVIS_TAG =~ [0-9]+[^a-z][0-9]*$

    ########## END-USER PACKAGES ##########

    - &conda_pkg
      <<: *default  
      stage: conda_core_dev_package
      env: DESC="" TRAVIS_NOCACHE=$TRAVIS_JOB_ID CHANS=$CHANS_DEV LABELS=$LABELS_DEV
      install:
        - travis_wait 30 doit package_build --recipe=core $CHANS $PKG_TEST_PYTHON --test-group=unit
      script:
        - doit package_upload --token=$CONDA_UPLOAD_TOKEN $LABELS --recipe=core

    - &conda_pkg
      <<: *default
      stage: conda_recommended_dev_package
      env: DESC="" TRAVIS_NOCACHE=$TRAVIS_JOB_ID CHANS=$CHANS_DEV LABELS=$LABELS_DEV
      install:
        - travis_wait 30 doit package_build --recipe=recommended $CHANS $PKG_TEST_PYTHON --test-group=examples
      script:
        - doit package_upload --token=$CONDA_UPLOAD_TOKEN $LABELS --recipe=recommended

    - <<: *conda_pkg
      stage: conda_package
      env: DESC="" TRAVIS_NOCACHE=$TRAVIS_JOB_ID CHANS=$CHANS_REL LABELS=$LABELS_REL


    # Pip packages are awkward because we use conda for gv's
    # dependencies when making the pip package (something pyctdev does
    # not support, but could).
    - &pip_pkg
      <<: *default
      stage: pip_dev_package
      env: TRAVIS_NOCACHE=$TRAVIS_JOB_ID PYPI=testpypi PYPIUSER=$TPPU PYPIPASS=$TPPP
      install:
        - doit develop_install $CHANS_DEV -o tests && pip uninstall -y geoviews
        - doit pip_on_conda
        - doit ecosystem=pip package_build --test-python=py36 --test-group=unit
      script: doit ecosystem=pip package_upload -u $PYPIUSER -p $PYPIPASS --pypi=$PYPI

    - <<: *pip_pkg
      stage: pip_package
      env: TRAVIS_NOCACHE=$TRAVIS_JOB_ID PYPI=pypi PYPIUSER=$PPU PYPIPASS=$PPP
