# At some point, should probably change to generic (since using conda)
language: generic
sudo: false

os:
  - linux

# TODO: don't cache for now because of pip hv in the env
#cache:
#  directories:
#    - $HOME/miniconda

#before_cache:
#  - rm -rf $HOME/miniconda/pkgs
#  - rm -rf $HOME/miniconda/conda-bld/*

env:
  global:
    - PYENV_VERSION=3.6
    # TODO: update once basically working
    - PKG_TEST_PYTHON="--test-python=py36"
    - CHANNELS="-c pyviz/label/dev -c ioam -c conda-forge -c defaults"

# TODO: add conditionals for packages before merge
stages:
  - test
  - name: docs
    if: (branch != packaging)
  - name: conda_dev_package
    if: (branch = packaging)


jobs:
  include:
    ########## DEVELOPER INSTALL ##########

    # quick tests in typical dev env (most tests are run on packages)

    - &default
      stage: test
      env: DESC="dev test_all_quick"
      before_install:
        - pip install pyct && doit miniconda_install && pip uninstall -y doit pyct
        - export PATH="$HOME/miniconda/bin:$PATH" && hash -r
        - conda config --set always_yes True
        - conda install -c pyviz/label/dev pyct && doit ecosystem_setup
      install:
        - doit env_create --python=$PYENV_VERSION
        - source activate test-environment
        - doit develop_install $CHANNELS
        # TODO
        - conda remove --force holoviews && pip install --upgrade git+https://github.com/ioam/holoviews.git
        - doit env_capture
      script: #TODO: doit test_all_quick
        - doit test_flakes
        - doit test_unit


    # python 2 flake checking typically catches python 2 syntax
    # errors where python 3's been assumed...
    - <<: *default
      env: DESC="py2 flakes" PYENV_VERSION=2.7
      script: doit test_flakes


# TODO coveralls (for just py3, or py2 py3 combined, or...?)
#      after_success: coveralls


    ########## DOCS ##########

    # TODO

    - <<: *default
      stage: docs
      env: DESC=""      
      script:
        # TODO: can't remember why I did this twice
        - python -c "import geoviews as gv; gv.sample_data('notebooks/user_guide/sample-data')"
        - python -c "import geoviews as gv; gv.sample_data('doc/sample-data')"
        - python -c "import bokeh; bokeh.sampledata.download()"
        - conda install -c pyviz/label/dev -c conda-forge nbsite sphinx_ioam_theme
        - conda install -c nesii/label/dev-esmf -c conda-forge esmpy
        - pip install xesmf
        # TODO: should make this content available too rather than deleting it!
        - rm notebooks/*.ipynb
        - cd doc
        - nbsite_nbpagebuild.py ioam geoviews ../notebooks .
        # gallery notebooks depend on user guide assets
        - mkdir -p _build/html/user_guide
        - cp -r ../notebooks/user_guide/assets user_guide/
        - cp -r ../notebooks/user_guide/assets _build/html/user_guide/
        - cp -r ../notebooks/user_guide/sample-data _build/html/user_guide/
        - nbsite_gallery.py .. notebooks None '.' matplotlib bokeh None 
        - sphinx-build -b html . ./_build/html
        - nbsite_fix_links.py _build/html
        - nbsite_cleandisthtml.py ./_build/html take_a_chance
        - touch ./_build/html/.nojekyll
        - cd ..
      deploy:
        - provider: pages
          skip_cleanup: true
          github_token: $GITHUB_TOKEN
          local_dir: ./doc/_build/html
          on:
            branch: master


    ########## END-USER PACKAGES ##########

    ## dev packages

    - <<: *default
      stage: conda_dev_package
      env: DESC=""
      install:
        - doit package_build --recipe=core $CHANNELS $PKG_TEST_PYTHON --test-group=unit
        # TODO: examples tests
        - doit package_build --recipe=recommended $CHANNELS $PKG_TEST_PYTHON --test-group=unit
      script:
        # TODO: going to anaconda.org/ceball temporarily
        - doit package_upload --token=$CEBTMP --recipe=core --label=dev
        - doit package_upload --token=$CEBTMP --recipe=recommended --label=dev
