language: generic
sudo: false

# TODO: tmp, will remove
git:
  depth: 100

os:
  - linux

cache:
  directories:
    - $HOME/miniconda

before_cache:
  - rm -rf $HOME/miniconda/pkgs
  - rm -rf $HOME/miniconda/conda-bld/*

env:
  global:
    - PYENV_VERSION=3.6
    # TODO: update once basically working
    - PKG_TEST_PYTHON="--test-python=py36"
    # TODO: split channels for dev vs main pkg. Should be ioam/label/dev
    #       for hv dev? except that is lagging ioam/label/main?
    - CHANNELS="-c pyviz/label/dev -c ioam -c conda-forge -c defaults"

# quick hack to determine what tag means (improvements welcome)
#     release: ^v(\d+|\.)*[^a-z]\d*$
# dev release: ^v(\d+|\.)*[a-z]\d*$

stages:
  - test
  # TODO: move to be after packages
  - name: docs
    if: tag =~ ^v(\d+|\.)*[a-z]\d*$
  - name: pip_dev_package
    if: tag =~ ^v(\d+|\.)*[a-z]\d*$
  - name: conda_dev_package
    if: tag =~ ^v(\d+|\.)*[a-z]\d*$
#  - name: conda_package
#    if: tag =~ ^v(\d+|\.)*[^a-z]\d*$
#  - name: pip_package
#    if: tag =~ ^v(\d+|\.)*[^a-z]\d*$

jobs:
  include:
    ########## DEVELOPER INSTALL ##########

    # quick tests in typical dev env (most tests are run on packages)

    - &default
      stage: test
      env: DESC="dev test_all_quick"
      before_install:
        - pip install pyct && doit miniconda_install && pip uninstall -y doit pyct
        - export PATH="$HOME/miniconda/bin:$PATH" && hash -r
        - conda config --set always_yes True
        - conda install -c pyviz/label/dev pyct && doit ecosystem_setup
      install:
        - doit env_create --python=$PYENV_VERSION
        - source activate test-environment
        - doit develop_install $CHANNELS -o recommended
        - doit env_capture
      script: #TODO: doit test_all_quick or test_all (need to run at least some notebooks)
        - doit test_flakes
        - doit test_unit

# TODO skip because enum34 and xesmf conda packages conflict on py27
#    # python 2 flake checking typically catches python 2 syntax
#    # errors where python 3's been assumed...
#    - <<: *default
#      env: DESC="py2 flakes" PYENV_VERSION=2.7
#      script: doit test_flakes


# TODO coveralls (for just py3, or py2 py3 combined, or...?)
#      after_success: coveralls


    ########## DOCS ##########

    - <<: *default
      stage: docs
      env: DESC="docs"
      script:
        - doit develop_install $CHANNELS -o doc
        # TODO: various doc steps will move out of .travis
        - geoviews download_data --path=examples
        - bokeh sampledata
        # TODO: should make this content available too rather than deleting it!
        - rm examples/Colocated_cube_pair.ipynb examples/CubeExplorer_Prototype.ipynb
        - cd doc
        - nbsite_nbpagebuild.py ioam geoviews ../examples .     
        ## TODO: should simplify after better gallery support in nbsite
        - mkdir -p _build/html && cp -r ../examples/user_guide/assets _build/html/user_guide/
        - nbsite_gallery.py .. examples None '.' matplotlib bokeh None
        ##
        - sphinx-build -b html . ./_build/html
        - nbsite_fix_links.py _build/html
        - nbsite_cleandisthtml.py ./_build/html take_a_chance
        - touch ./_build/html/.nojekyll
        - cd ..
      deploy:
        - provider: pages
          skip_cleanup: true
          github_token: $GITHUB_TOKEN
          local_dir: ./doc/_build/html
          repo: ioam-docs/geoviews-dev
          #on:
          #  branch: gallery
# TODO: on release tag
#        - provider: pages
#          skip_cleanup: true
#          github_token: $GITHUB_TOKEN
#          local_dir: ./doc/_build/html
#          on:
#            branch: master


    ########## END-USER PACKAGES ##########

    ## dev packages

    - <<: *default
      stage: conda_dev_package
      env: DESC="" TRAVIS_NOCACHE=$TRAVIS_JOB_ID
      install:
        - doit package_build --recipe=core $CHANNELS $PKG_TEST_PYTHON --test-group=unit
        - doit package_build --recipe=recommended $CHANNELS $PKG_TEST_PYTHON --test-group=examples
      script:
        # TODO: going to anaconda.org/ceball temporarily
        - doit package_upload --user=ceball --token=$CEBTMP --label=dev --recipe=core
        - doit package_upload --user=ceball --token=$CEBTMP --label=dev --recipe=recommended

    # Awkward because we use conda for gv's dependencies when making
    # the pip package (something pyct does not support, but could)
    - <<: *default
      stage: pip_dev_package
      env: PYPI="https://test.pypi.org/legacy/" TRAVIS_NOCACHE=$TRAVIS_JOB_ID
      install:
        # install deps using conda
        - doit develop_install $CHANNELS -o tests && pip uninstall -y geoviews
        # some ecosystem=pip build tools must be installed with conda when using conda...
        - conda install -y pip twine wheel
        # ..and some are only available via conda-forge
        - conda install -y -c conda-forge tox virtualenv
        # this interferes with pip-installed nose
        - conda remove -y --force nose
        # now carry on as normal
        - doit ecosystem=pip package_build --test-python=py36 --test-group=unit
      script: doit ecosystem=pip package_upload -u $TPPU -p $TPPP -r ${PYPI}
